{
  "compileOnSave": false,
  "compilerOptions": {
    "baseUrl": "./",
    "outDir": "./dist/out-tsc",
    "forceConsistentCasingInFileNames": true,
    "strict": true,
    "noImplicitOverride": true,
    "noPropertyAccessFromIndexSignature": true,
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true,
    "sourceMap": true,
    "declaration": false,
    "downlevelIteration": true,
    "experimentalDecorators": true,
    "moduleResolution": "node",
    "importHelpers": true,
    "target": "ES2022",
    "module": "ES2022",
    "useDefineForClassFields": false,
    "lib": [
      "ES2022",
      "dom"
    ],
    "paths": {
      // shared
      "@shared/assertions": [ "src/domains/shared/assertions/index" ],
      "@shared/common": [ "src/domains/shared/common/index" ],
      // infrastructure
      "@infrastructure/open-api": [ "src/infrastructure/open-api/index" ],
      // domains
      "@core": [ "src/domains/core/index" ],
      "@auth": [ "src/domains/auth/index" ],
      "@api": [ "src/domains/api/index" ],
      // testing, special case to bypass rules, for dependency injections in testing.
      "@testing": [ "src/domains/auth/utils/auth.service" ],
    }
  },
  "angularCompilerOptions": {
    "enableI18nLegacyMessageIdFormat": false,
    "strictInjectionParameters": true,
    "strictInputAccessModifiers": true,
    "strictTemplates": true
  },
  "exclude": [
    // Comment out, if you write jest tests ".spec.ts" // https://github.com/microsoft/TypeScript/issues/37053 (╯‵□′)╯︵┻━┻
    // and restart vscode. (I dont think it mattes, how you check it in, but try to keep git changes minimal. Preferable keep it commented out, because I use cypress component test more then spec tests)
    "./cypress.config.ts", 
    "./cypress"
  ]
}
